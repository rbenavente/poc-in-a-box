# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
# trigger:
# - master
variables:
  APOCTL_NAMESPACE: $(NS)
  APOCTL_CREDS: $(CREDS)

resources:
  repositories:
  - repository: self
    type: git
    ref: refs/heads/main
stages:
- stage: Build
  jobs:
  - job: BuildJob
    displayName: Agent
    pool:
      vmImage: ubuntu-latest
 steps:
    - checkout: self
    - task: DownloadSecureFile@1
       name: aporetoCreds
       displayName: 'Aporeto Creds'
       inputs:
         secureFile: 'azure-devops.json'

      - script: |
         echo Installing $(aporetoCreds.secureFilePath) to the trusted .apoctl directory...
         mv $(aporetoCreds.secureFilePath) ~
    - task: CmdLine@2
      inputs:
        script: |
          echo Apoctl variables $(APOCTL_CREDS) $(APOCTL_NAMESPACE)
    - task: CmdLine@2
      displayName: Download Apoctl
      inputs:
        script: >
          sudo curl -o /usr/local/bin/apoctl \
            https://download.aporeto.com/apoctl/linux/apoctl && \
          sudo chmod +x /usr/local/bin/apoctl
    - task: CmdLine@2
      displayName: Authenticates the pipeline with Prisma Cloud
      inputs:
        script: >-
          apoctl auth verify
    - task: KubectlInstaller@0
      inputs:
        kubectlVersion: 'latest'
    
    - task: DownloadSecureFile@1
      name: kubeConfig
      displayName: 'Kubernetes config'
      inputs:
        secureFile: 'config'

    - script: |
        echo Installing $(kubeConfig.secureFilePath) to the trusted .kube directory...
        mkdir ~/.kube
        mv $(kubeConfig.secureFilePath) ~/.kube/config
    - task: CmdLine@2
      displayName: Check files in place
      inputs:
        script: |
          echo Check all the directories and files 
          pwd
          ls -la ~/.kube
          ls -al ~
          ls -al /home/vsts/work/1/s
          
 
    - task: CmdLine@2
      displayName: Check Kubernetes connections
      inputs:
        script: >-
          kubectl get ns
    - task: CmdLine@2
      displayName: Create POC-in-Box
      inputs:
        script: |
          cd /home/vsts/work/1/s
          export PATH=$PWD/bin/scripts:$PATH
          apoctl configure -n /$GROUP/$CLOUD -t $TOKEN
          all/create

- stage: Test
  jobs:
  - job: TestOnWindows
    steps:
    - script: echo Testing on Windows!
  - job: TestOnLinux
    steps:
    - script: echo Testing on Linux!
- stage: Deploy
  jobs:
  - job: Deploy
    steps:
    - script: echo Deploying the code!
    
